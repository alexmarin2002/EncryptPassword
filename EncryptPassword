#include <iostream>
#include <windows.h>
std::string nome;
int pause = 0;
int loginAttemp = 4;
int next = 0;
int prova2 = 1;

void loginGraph();

void encryptCode();

void login();


void loginGraph() {
	COORD variableName = { 30, 7 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName);
	std::cout << "***************************************************************" << std::endl;
	COORD variableName1 = { 30, 8 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName1);
	std::cout << "*----------------------------LOGIN----------------------------*" << std::endl;
	int altezza = 10, i = 0, o = 9;
	for (; i <= altezza; i++) {
		COORD variableName1 = { 30, o }; // {x , y}
		SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName1);
		std::cout << "*                                                             *";
		o++;
		if (i == 10) {
			COORD variableName1 = { 30, o }; // {x , y}
			SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName1);
			std::cout << "***************************************************************" << std::endl;
		}
	}
}
void encryptGraph() {
	COORD variableName = { 10, 7 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName);
	std::cout << "**************************************************************************************************" << std::endl;
	COORD variableName1 = { 10, 8 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName1);
	std::cout << "*--------------------------------------------ENCRYPT---------------------------------------------*" << std::endl;
	int altezza = 10, i = 0, o = 9;
	for (; i <= altezza; i++) {
		COORD variableName1 = { 10, o }; // {x , y}
		SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName1);
		std::cout << "*                                                                                                *";
		o++;
		if (i == 10) {
			COORD variableName1 = { 10, o }; // {x , y}
			SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName1);
			std::cout << "**************************************************************************************************" << std::endl;
		}
	}

}

void print(const std::string& nome)
{
	for (std::string::size_type i = 0; i < nome.size(); i++) {
		std::cout << nome[i] << ' ';
	}
}

void letterPos(int x, int y){
	COORD variableName5 = { x, y }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName5);
}

void loopConverter() {
	for (std::string::size_type i = 0; i < nome.size(); i++) {
		if (i == 18) {
			COORD variableName4 = { 45, 16 }; // {x , y}
			SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName4);
		}
		switch (nome[i]) {
		case  'q' : std::cout << "?=!";
			break;
		case  'Q': std::cout << "?=!+";
			break;	
		case  'w' : std::cout << "yew";
			break;
		case  'W': std::cout << "yew+";
			break;
		case  'e': std::cout << "nsh";
			break;
		case  'E': std::cout << "nsh+";
			break;
		case  'r': std::cout << "^?=";
			break;
		case  'R': std::cout << "^?=+";
			break;
		case  't': std::cout << "!$a";
			break;
		case  'T': std::cout << "yew+";
			break;
		case  'y': std::cout << "%&/";
			break;
		case  'Y': std::cout << "%&/+";
			break;
		case  'u': std::cout << "nki";
			break;
		case  'U': std::cout << "nki+";
			break;
		case  'i': std::cout << "!f$";
			break;
		case  'I': std::cout << "!f$+";
			break;
		case  'o': std::cout << "1E5";
			break;
		case  'O': std::cout << "1E5+";
			break;
		case  'p': std::cout << "n8%";
			break;
		case  'P': std::cout << "n8%+";
			break;
		case  'a': std::cout << "p78";
			break;
		case  'A': std::cout << "p78+";
			break;
		case  's': std::cout << "U(7";
			break;
		case  'S': std::cout << "U(7+";
			break;
		case  'd': std::cout << "Q$1";
			break;
		case  'D': std::cout << "Q$1+";
			break;
		case  'f': std::cout << "WuW";
			break;
		case  'F': std::cout << "WuW+";
			break;
		case  'g': std::cout << ")(6";
			break;
		case  'G': std::cout << ")(6+";
			break;
		case  'h': std::cout << "=?^";
			break;
		case  'H': std::cout << "=?^+";
			break;
		case  'j': std::cout << "9O/";
			break;
		case  'J': std::cout << "9O/+";
			break;
		case  'k': std::cout << "/7&";
			break;
		case  'K': std::cout << "/7&+";
			break;
		case  'l': std::cout << "!4&";
			break;
		case  'L': std::cout << "!4&+";
			break;
		case  'z': std::cout << "yew";
			break;
		case  'Z': std::cout << "yew+";
			break;
		case  'x': std::cout << "0?^";
			break;
		case  'X': std::cout << "0?^+";
			break;
		case  'c': std::cout << "6!d";
			break;
		case  'C': std::cout << "6!d+";
			break;
		case  'v': std::cout << "D7?";
			break;
		case  'V': std::cout << "D7?+";
			break;
		case  'b': std::cout << "B0!";
			break;
		case  'B': std::cout << "B0!+";
			break;
		case  'n': std::cout << "^Y)";
			break;
		case  'N': std::cout << "^Y)+";
			break;
		case  'm': std::cout << "9%/";
			break;
		case  'M': std::cout << "9%/+";
			break;
		case  '0': std::cout << "8&6*";
			break;
		case  '1': std::cout << "9!3*";
			break;
		case  '2': std::cout << "G^1*";
			break;
		case  '3': std::cout << "X0?*";
			break;
		case  '4': std::cout << "O=)*";
			break;
		case  '5': std::cout << "A0S*";
			break;
		case  '6': std::cout << "7!/*";
			break;
		case  '7': std::cout << "8R^*";
			break;
		case  '8': std::cout << "7!%*";
			break;
		case  '9': std::cout << "4/%*";
			break;
		}
	}
}

void encryptCode() {
	system("cls");
	encryptGraph();
	COORD variableName15 = { 97, 19 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName15);
	std::cout << "by Alisey";
	COORD variableName1 = { 17, 12 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName1);
	std::cout << "  Type Password to Encrypt: ";
	COORD variableName2 = { 17, 15 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName2);
	std::cout << "     Encrypted password is: ";
	COORD variableName3 = { 45, 12 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName3);
	std::cin >> nome;
	COORD variableName4 = { 45, 15 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName4);
	loopConverter();
	COORD variableName5 = { 38, 18 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName5);
	std::cout << " !PRESS ANY KEY TO CONVERT ANOTHER PASSWORD!";
	system("pause>0");
	encryptCode();
}

int main()
{
	login();
}

void login() {
	bool loginState = true;
	bool please = true;
	loginAttemp--;
	std::string logindIDtrue = "alexmarin2002";
	std::string loginPWtrue = "Iosonoleggenda2002";
	std::string loginID;
	std::string loginPW;
	loginGraph();
	COORD variableName15 = {82, 19 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName15);
	std::cout << "by Alisey";
	COORD variableName6 = { 47, 16 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName6);
	std::cout << " Remaining Login Attempt:" << loginAttemp;
	if (pause >= 1) {
		COORD variableName5 = { 43, 17 }; // {x , y}
		SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName5);
		std::cout << " The UserName or Password is wrong! ";
	}
	COORD variableName1 = { 45, 11 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName1);
	std::cout << "User Name:";
	COORD variableName2 = { 45, 13 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName2);
	std::cout << " Password:";
	COORD variableName3 = { 56, 11 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName3);
	std::cin >> loginID;
	COORD variableName4 = { 56, 13 }; // {x , y}
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName4);
	std::cin >> loginPW;
	if (loginID == logindIDtrue && loginPW == loginPWtrue) {
	encryptCode();
	}
	else {
		if(loginAttemp >= 1){
		pause++;
		system("cls");
		login();
		}
		else {
			loginGraph();
			COORD variableName9 = { 45, 13 }; // {x , y}
			SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName9);
			std::cout << "YOU ATTEMPTED TOO MANY TIMES, BYE!";
			COORD variableName15 = { 82, 19 }; // {x , y}
			SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), variableName15);
			std::cout << "by Alisey";
			system("pause>0");
		}
	}
}
